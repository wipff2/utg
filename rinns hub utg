local ArrayField = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AArrayfield%20Library"))()
-- soucrch get by rof_r
local Window = ArrayField:CreateWindow({
    Name = "Rinns Hub",
    LoadingTitle = "Rinns Hub",
    LoadingSubtitle = "Code by Rinn and Kylo Ui by Sirius Ui remake by Hosvile",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "RinnsHubConfigs",
        FileName = "RinnsHub"
    },
    Discord = {
        Enabled = false,
        Invite = "Mt9F5nc8Tg",
        RememberJoins = false
    },
    KeySystem = false,
    KeySettings = {
        Title = "ArrayField",
        Subtitle = "Key System",
        Note = "Join the discord (discord.gg/sirius)",
        FileName = "ArrayFieldsKeys",
        SaveKey = false,
        GrabKeyFromSite = false,
        Key = {"Hello",'Bye'},
        Actions = {
            [1] = {
                Text = 'Click here to copy the key link',
                OnPress = function()
                end,
            }
        },
    }
})

local Tab = Window:CreateTab("Main Tab", 4483362458) -- Title, Image


Tab:CreateButton({
    Name = "Copy Link Discord",
    Info = {
        Title = 'Copy Discord Link',
        Description = 'copy discord link to clipboard ',
    },
    Interact = 'Changable',
    Callback = function()
        setclipboard('https://discord.gg/gewBfTSm') 
        print('Www')              
    end,
})
Tab:CreateButton({
    Name = "Copy Loader/Loadstring",
    Info = {
        Title = 'Copy Loadstring',
        Description = 'copy Loadstring to clipboard',
    },
    Interact = 'Changable',
    Callback = function()
        setclipboard('https://discord.gg/gewBfTSm') 
        print('Www')              
    end,
})

local tagAura = false local ignoreDead = false local teamCheck = false local tagAuraMode = {"Closest"} local tagAuraRange = 15 local tagCooldowns = {}

local ToggleTagAura = Tab:CreateToggle({ Name = "Tag Auto", CurrentValue = false, Flag = "TagAura", Callback = function(Value) tagAura = Value end, })

local DropdownTagAuraMode = Tab:CreateDropdown({ Name = "Tag Mode", Options = {"Closest", "Multi Target"}, CurrentOption = {"Closest"}, MultipleOptions = false, Flag = "TagAuraMode", Callback = function(Option) tagAuraMode = Option end, })

local SliderTagAuraRange = Tab:CreateSlider({ Name = "Tag Range", Range = {0, 15}, Increment = 1, CurrentValue = 10, Flag = "TagAuraRange", Callback = function(Value) tagAuraRange = Value end, })

local ToggleIgnoreDead = Tab:CreateToggle({ Name = "Tag Ignore Dead", CurrentValue = false, Flag = "IgnoreDead", Callback = function(Value) ignoreDead = Value end, })

local ToggleTeamCheck = Tab:CreateToggle({ Name = "Team Check Tag", CurrentValue = false, Flag = "TeamCheck", Callback = function(Value) teamCheck = Value end, })

local players = game:GetService("Players") local replicatedStorage = game:GetService("ReplicatedStorage") local tagPlayerEvent = replicatedStorage.Events.game.tags.TagPlayer local animations = replicatedStorage.Animations.Base

local function isPlayerValid(player) if not player.Character then return false end if ignoreDead and player:FindFirstChild("PlayerRole") and player.PlayerRole.Value == "Dead" then return false end if teamCheck and player:FindFirstChild("PlayerRole") and player.PlayerRole.Value == players.LocalPlayer.PlayerRole.Value then return false end return true end

local function playRandomTagAnimation() local character = players.LocalPlayer.Character if character and character:FindFirstChild("Humanoid") then local humanoid = character.Humanoid local animator = humanoid:FindFirstChild("Animator") or Instance.new("Animator", humanoid) local animation = math.random(1, 2) == 1 and animations.Tag1 or animations.Tag2 local animTrack = animator:LoadAnimation(animation) animTrack:Play() end end

spawn(function() while true do if tagAura then local currentTime = tick() local localCharacter = players.LocalPlayer.Character if localCharacter and localCharacter:FindFirstChild("HumanoidRootPart") then local localPosition = localCharacter.HumanoidRootPart.Position

if tagAuraMode[1] == "Closest" then
                local nearestPlayer, shortestDistance = nil, tagAuraRange
                for _, player in pairs(players:GetPlayers()) do
                    if player ~= players.LocalPlayer and isPlayerValid(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
                        if distance <= tagAuraRange and distance < shortestDistance and (not tagCooldowns[player] or currentTime - tagCooldowns[player] > 1) then
                            nearestPlayer, shortestDistance = player, distance
                        end
                    end
                end
                if nearestPlayer then
                    tagPlayerEvent:InvokeServer(nearestPlayer.Character.Humanoid, nearestPlayer.Character.HumanoidRootPart.Position)
                    tagCooldowns[nearestPlayer] = currentTime
                    playRandomTagAnimation()
                    print("Tagged", nearestPlayer.Name)
                end
            elseif tagAuraMode[1] == "Multi Target" then
                for _, player in pairs(players:GetPlayers()) do
                    if player ~= players.LocalPlayer and isPlayerValid(player) and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = (player.Character.HumanoidRootPart.Position - localPosition).Magnitude
                        if distance <= tagAuraRange and (not tagCooldowns[player] or currentTime - tagCooldowns[player] > 1) then
                            tagPlayerEvent:InvokeServer(player.Character.Humanoid, player.Character.HumanoidRootPart.Position)
                            tagCooldowns[player] = currentTime
                            playRandomTagAnimation()
                            print("Tagged", player.Name)
                        end
                    end
                end
            end
        end
    end
    task.wait()
end

end)
