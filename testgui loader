local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "loader",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "e",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = testr, -- Create a custom folder for your hub/game
      FileName = "loaderhubui"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("one", 4483362458) -- Title, Image
local SelectedOption = "Both" -- Default option

local Dropdown = Tab:CreateDropdown({
    Name = "Select Script",
    Options = {"Script 1 button", "Script 2 ui", "Both"},
    CurrentOption = {"Both"},
    MultipleOptions = false,
    Flag = "ScriptDropdown",
    Callback = function(Options)
        SelectedOption = Options[1]
    end,
})

local Button = Tab:CreateButton({
    Name = "confirm Script",
    Callback = function()
        if SelectedOption == "Script 1" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/wipff2/utg/refs/heads/main/button2Enc'))()
        elseif SelectedOption == "Script 2" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/nAlwspa/Into/refs/heads/main/tag.lua'))()
        elseif SelectedOption == "Both" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/wipff2/utg/refs/heads/main/button2Enc'))()
            loadstring(game:HttpGet('https://raw.githubusercontent.com/nAlwspa/Into/refs/heads/main/tag.lua'))()
        end

        -- Hancurkan UI setelah eksekusi script
        if Rayfield then
            Rayfield:Destroy()
        end
    end,
})